// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	io "io"

	archive "github.com/wal-g/wal-g/internal/databases/mongo/archive"

	mock "github.com/stretchr/testify/mock"

	models "github.com/wal-g/wal-g/internal/databases/mongo/models"
)

// Downloader is an autogenerated mock type for the Downloader type
type Downloader struct {
	mock.Mock
}

// DownloadOplogArchive provides a mock function with given fields: arch, writeCloser
func (_m *Downloader) DownloadOplogArchive(arch models.Archive, writeCloser io.WriteCloser) error {
	ret := _m.Called(arch, writeCloser)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Archive, io.WriteCloser) error); ok {
		r0 = rf(arch, writeCloser)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListOplogArchives provides a mock function with given fields:
func (_m *Downloader) ListOplogArchives() ([]models.Archive, error) {
	ret := _m.Called()

	var r0 []models.Archive
	if rf, ok := ret.Get(0).(func() []models.Archive); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Archive)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Sentinel provides a mock function with given fields: name
func (_m *Downloader) Sentinel(name string) (archive.StreamSentinelDto, error) {
	ret := _m.Called(name)

	var r0 archive.StreamSentinelDto
	if rf, ok := ret.Get(0).(func(string) archive.StreamSentinelDto); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(archive.StreamSentinelDto)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

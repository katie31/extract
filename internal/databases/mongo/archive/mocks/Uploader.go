// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	io "io"

	archive "github.com/wal-g/wal-g/internal/databases/mongo/archive"

	mock "github.com/stretchr/testify/mock"

	models "github.com/wal-g/wal-g/internal/databases/mongo/models"
)

// Uploader is an autogenerated mock type for the Uploader type
type Uploader struct {
	mock.Mock
}

// FileExtension provides a mock function with given fields:
func (_m *Uploader) FileExtension() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// UploadBackup provides a mock function with given fields: stream, metaProvider
func (_m *Uploader) UploadBackup(stream io.Reader, metaProvider archive.BackupMetaProvider) error {
	ret := _m.Called(stream, metaProvider)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Reader, archive.BackupMetaProvider) error); ok {
		r0 = rf(stream, metaProvider)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UploadOplogArchive provides a mock function with given fields: stream, firstTS, lastTS
func (_m *Uploader) UploadOplogArchive(stream io.Reader, firstTS models.Timestamp, lastTS models.Timestamp) error {
	ret := _m.Called(stream, firstTS, lastTS)

	var r0 error
	if rf, ok := ret.Get(0).(func(io.Reader, models.Timestamp, models.Timestamp) error); ok {
		r0 = rf(stream, firstTS, lastTS)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
